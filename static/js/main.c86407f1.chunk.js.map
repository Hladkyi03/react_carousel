{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","nav","useState","currentPosition","setCurrentPosition","currentNavPosition","setCurrentNavPosition","navIds","n","ids","i","push","getNavIds","Math","ceil","length","maxNavId","maxTransform","carouselDynamicStyles","width","carouselListDynamicStyles","transform","transition","imageDynamicStyles","className","style","map","imageUrl","src","alt","navId","type","onClick","id","prev","disabled","App","state","handleInputChange","e","target","value","name","checked","setState","prevState","this","htmlFor","min","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+QA8JeA,EAvImB,SAAC,GAQ5B,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,KACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,IAEA,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoDF,mBAAS,GAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KAEMC,EAtBU,SAACC,GAGjB,IAFA,IAAMC,EAAM,GAEHC,EAAI,EAAGA,EAAIF,EAAGE,GAAK,EAC1BD,EAAIE,KAAKD,GAGX,OAAOD,EAeQG,CAAUC,KAAKC,KAAKnB,EAAOoB,OAASlB,IAE7CmB,EAAWT,EAAOA,EAAOQ,OAAS,GAClCE,EAAenB,EAAYH,EAAOoB,OAASlB,EAAYC,EAEvDoB,EAAwB,CAC5BC,MAAOtB,EAAYC,GAGfsB,EAA4B,CAChCC,UAAU,cAAD,OAAgBlB,EAAhB,OACTmB,WAAW,aAAD,OAAevB,EAAoB,IAAnC,WAGNwB,EAAqB,CACzBJ,MAAOrB,GAuDT,OACE,sBAAK0B,UAAU,WAAWC,MAAOP,EAAjC,UACE,oBAAIM,UAAU,iBAAiBC,MAAOL,EAAtC,SACGzB,EAAO+B,KAAI,SAAAC,GAAQ,OAClB,6BACE,qBACEC,IAAKD,EACLE,IAAI,iBACJL,UAAU,kBACVC,MAAOF,KALFI,QAWZ1B,GACC,qBAAKuB,UAAU,gBAAf,SACGjB,EAAOmB,KAAI,SAAAI,GAAK,OACf,wBACEC,KAAK,SACLP,UAAS,qBAAgBM,IAAUzB,EAAqB,SAAW,IACnE,mCAA2ByB,GAE3BE,QAAS,kBA/BjB5B,GAFuB6B,EAiCkBH,KAhChCd,GACWC,GAECrB,EAAOE,EAAYmC,QAG1C3B,EAAsB2B,GAPE,IAACA,IAgCVH,QAOb,sBAAKN,UAAU,2BAAf,UACE,wBACE,UAAQ,OACRO,KAAK,SACLP,UAAU,eACVQ,QAjEgB,WACtB,GAAwB,IAApB7B,EAAJ,CASA,GAAKA,EAAkBP,EAAOE,EAAa,EAIzC,OAHAM,EAAmB,QACnBE,EAAsB,GAKxBA,GAAsB,SAAA4B,GAAI,OAAIA,EAAO,KACrC9B,GAAmB,SAAA8B,GAAI,OAAIA,EAAOtC,EAAOE,UAhBnCE,IACFI,GAAoBa,GACpBX,EAAsBU,KA8DpBmB,SAA8B,IAApBhC,IAA0BH,EALtC,oBASA,wBACE,UAAQ,OACR+B,KAAK,SACLP,UAAU,eACVQ,QA/FgB,WACtB,GAAI7B,KAAsBc,EAA1B,CASA,GAAKd,EAAkBP,EAAOE,GAAcmB,EAI1C,OAHAb,GAAoBa,QACpBX,EAAsBU,GAKxBV,GAAsB,SAAA4B,GAAI,OAAIA,EAAO,KACrC9B,GAAmB,SAAA8B,GAAI,OAAIA,EAAOtC,EAAOE,UAhBnCE,IACFI,EAAmB,GACnBE,EAAsB,KA4FpB6B,SAAUhC,KAAsBc,IAAkBjB,EALpD,2BCnIFoC,E,4MACJC,MAAe,CACb1C,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,G,EAGZsC,kBAAoB,SAClBC,GAEA,MAAiCA,EAAEC,OAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,QAErB,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBH,EAAgB,aAATA,EAAsBC,GAAWF,Q,4CAI7C,WACE,MAEIK,KAAKT,MADP1C,EADF,EACEA,OAAQG,EADV,EACUA,UAAWD,EADrB,EACqBA,UAAWD,EADhC,EACgCA,KAAMG,EADtC,EACsCA,kBAAmBC,EADzD,EACyDA,SAGzD,OACE,sBAAKwB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAQA,UAAU,QAA9B,iCACoB7B,EAAOoB,OAD3B,aAIA,sBAAKS,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,sBAEA,sBAAKA,UAAU,oBAAf,UACE,uBAAOuB,QAAQ,YAAYvB,UAAU,kBAArC,yBAGA,uBACEO,KAAK,SACLP,UAAU,kBACVkB,KAAK,YACL9C,KAAM,GACN6C,MAAO3C,EACPkD,IAAK,GACLC,SAAUH,KAAKR,uBAInB,sBAAKd,UAAU,oBAAf,UACE,uBAAOuB,QAAQ,YAAYvB,UAAU,kBAArC,yBAGA,uBACEO,KAAK,SACLP,UAAU,kBACVkB,KAAK,YACLD,MAAO5C,EACPmD,IAAK,EACLC,SAAUH,KAAKR,uBAInB,sBAAKd,UAAU,oBAAf,UACE,uBAAOuB,QAAQ,OAAOvB,UAAU,kBAAhC,mBAGA,uBACEO,KAAK,SACLP,UAAU,kBACVkB,KAAK,OACLD,MAAO7C,EACPoD,IAAK,EACLC,SAAUH,KAAKR,uBAInB,sBAAKd,UAAU,oBAAf,UACE,uBAAOuB,QAAQ,oBAAoBvB,UAAU,kBAA7C,iCAGA,uBACEO,KAAK,SACLP,UAAU,kBACVkB,KAAK,oBACLD,MAAO1C,EACPiD,IAAK,GACLpD,KAAM,EACNqD,SAAUH,KAAKR,uBAInB,sBAAKd,UAAU,oBAAf,UACE,uBAAOuB,QAAQ,oBAAoBvB,UAAU,kBAA7C,uBAGA,uBACEO,KAAK,WACLP,UAAU,kBACVkB,KAAK,WACLC,QAAS3C,EACTiD,SAAUH,KAAKR,0BAKrB,cAAC,EAAD,CACE3C,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,EACVC,IAAKJ,IAAcD,W,GA7HXsD,IAAMC,WAoITf,IC9IfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c86407f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n  nav: boolean,\n};\n\nconst getNavIds = (n: number) => {\n  const ids = [];\n\n  for (let i = 0; i < n; i += 1) {\n    ids.push(i);\n  }\n\n  return ids;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  nav,\n}) => {\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [currentNavPosition, setCurrentNavPosition] = useState(0);\n\n  const navIds = getNavIds(Math.ceil(images.length / frameSize));\n\n  const maxNavId = navIds[navIds.length - 1];\n  const maxTransform = itemWidth * images.length - frameSize * itemWidth;\n\n  const carouselDynamicStyles = {\n    width: frameSize * itemWidth,\n  };\n\n  const carouselListDynamicStyles = {\n    transform: `translateX(${currentPosition}px)`,\n    transition: `transform ${animationDuration / 1000}s ease`,\n  };\n\n  const imageDynamicStyles = {\n    width: itemWidth,\n  };\n\n  const handleNextClick = () => {\n    if (currentPosition === -(maxTransform)) {\n      if (infinite) {\n        setCurrentPosition(0);\n        setCurrentNavPosition(0);\n      }\n\n      return;\n    }\n\n    if ((currentPosition - step * itemWidth) < -maxTransform) {\n      setCurrentPosition(-maxTransform);\n      setCurrentNavPosition(maxNavId);\n\n      return;\n    }\n\n    setCurrentNavPosition(prev => prev + 1);\n    setCurrentPosition(prev => prev - step * itemWidth);\n  };\n\n  const handlePrevClick = () => {\n    if (currentPosition === 0) {\n      if (infinite) {\n        setCurrentPosition(-maxTransform);\n        setCurrentNavPosition(maxNavId);\n      }\n\n      return;\n    }\n\n    if ((currentPosition + step * itemWidth) > 0) {\n      setCurrentPosition(0);\n      setCurrentNavPosition(0);\n\n      return;\n    }\n\n    setCurrentNavPosition(prev => prev - 1);\n    setCurrentPosition(prev => prev + step * itemWidth);\n  };\n\n  const handleNavBtnClick = (id: number) => {\n    if (id === maxNavId) {\n      setCurrentPosition(-maxTransform);\n    } else {\n      setCurrentPosition(-(step * itemWidth * id));\n    }\n\n    setCurrentNavPosition(id);\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselDynamicStyles}>\n      <ul className=\"Carousel__list\" style={carouselListDynamicStyles}>\n        {images.map(imageUrl => (\n          <li key={imageUrl}>\n            <img\n              src={imageUrl}\n              alt=\"carousel_image\"\n              className=\"Carousel__image\"\n              style={imageDynamicStyles}\n            />\n          </li>\n        ))}\n      </ul>\n\n      {nav && (\n        <nav className=\"carousel__nav\">\n          {navIds.map(navId => (\n            <button\n              type=\"button\"\n              className={`nav-button ${navId === currentNavPosition ? 'active' : ''}`}\n              aria-label={`Go to slide ${navId}`}\n              key={navId}\n              onClick={() => handleNavBtnClick(navId)}\n            />\n          ))}\n        </nav>\n      )}\n\n      <div className=\"carousel__button-wrapper\">\n        <button\n          data-cy=\"prev\"\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={handlePrevClick}\n          disabled={currentPosition === 0 && !infinite}\n        >\n          &#x25C0;\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className=\"arrow-button\"\n          onClick={handleNextClick}\n          disabled={currentPosition === -(maxTransform) && !infinite}\n        >\n          &#x25B6;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { value, name, checked } = e.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: name === 'infinite' ? checked : +value,\n    }));\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\" className=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"settings\">\n          <h2 className=\"setting__title\">Settings</h2>\n\n          <div className=\"settings__wrapper\">\n            <label htmlFor=\"itemWidth\" className=\"settings__label\">\n              Item width:\n            </label>\n            <input\n              type=\"number\"\n              className=\"settings__input\"\n              name=\"itemWidth\"\n              step={10}\n              value={itemWidth}\n              min={10}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"settings__wrapper\">\n            <label htmlFor=\"frameSize\" className=\"settings__label\">\n              Frame size:\n            </label>\n            <input\n              type=\"number\"\n              className=\"settings__input\"\n              name=\"frameSize\"\n              value={frameSize}\n              min={1}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"settings__wrapper\">\n            <label htmlFor=\"step\" className=\"settings__label\">\n              Step:\n            </label>\n            <input\n              type=\"number\"\n              className=\"settings__input\"\n              name=\"step\"\n              value={step}\n              min={1}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"settings__wrapper\">\n            <label htmlFor=\"animationDuration\" className=\"settings__label\">\n              Animation duration:\n            </label>\n            <input\n              type=\"number\"\n              className=\"settings__input\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min={10}\n              step={0}\n              onChange={this.handleInputChange}\n            />\n          </div>\n\n          <div className=\"settings__wrapper\">\n            <label htmlFor=\"animationDuration\" className=\"settings__label\">\n              Infinite:\n            </label>\n            <input\n              type=\"checkbox\"\n              className=\"settings__input\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInputChange}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          nav={frameSize === step}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}